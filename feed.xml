<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://m-usmansaeed.github.io/cwu/feed.xml" rel="self" type="application/atom+xml" /><link href="https://m-usmansaeed.github.io/cwu/" rel="alternate" type="text/html" /><updated>2024-05-04T12:05:57+05:00</updated><id>https://m-usmansaeed.github.io/cwu/feed.xml</id><title type="html">Code with Usman</title><author><name>Usman Saeed</name><email>itsusman.saeed@gmail.com</email></author><entry><title type="html">Elevate Your SwiftUI User Interface with Modifiers</title><link href="https://m-usmansaeed.github.io/cwu/2024/05/03/exploring-modifiers-in-swiftui/" rel="alternate" type="text/html" title="Elevate Your SwiftUI User Interface with Modifiers" /><published>2024-05-03T00:00:00+05:00</published><updated>2024-05-03T00:00:00+05:00</updated><id>https://m-usmansaeed.github.io/cwu/2024/05/03/exploring-modifiers-in-swiftui</id><content type="html" xml:base="https://m-usmansaeed.github.io/cwu/2024/05/03/exploring-modifiers-in-swiftui/"><![CDATA[<p>Welcome to the world of SwiftUI modifiers, where you can transform and style your user interface with elegance and simplicity. Modifiers are powerful tools that allow you to customize the appearance and behavior of views in SwiftUI. In this article, we’ll explore the magic of modifiers and how you can use them creatively to enhance your app’s user experience.</p>

<h2 id="what-are-modifiers">What are Modifiers?</h2>

<p>In SwiftUI, modifiers are methods that you can chain onto views to change their properties, such as font, color, size, alignment, and more. They allow for a declarative and concise way of specifying how views should look and behave.</p>

<p>Let’s dive into some examples to see modifiers in action!</p>

<h3 id="changing-text-appearance">Changing Text Appearance</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">SwiftUI</span>

<span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Text</span><span class="p">(</span><span class="s">"Hello, SwiftUI!"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title</span><span class="p">)</span> <span class="c1">// Set font size</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span> <span class="c1">// Set text color</span>
            <span class="o">.</span><span class="nf">padding</span><span class="p">()</span> <span class="c1">// Add padding around the text</span>
            <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">pink</span><span class="p">)</span> <span class="c1">// Set background color</span>
            <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1">// Round the corners</span>
            <span class="o">.</span><span class="nf">shadow</span><span class="p">(</span><span class="nv">radius</span><span class="p">:</span> <span class="mi">5</span><span class="p">)</span> <span class="c1">// Add a shadow</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="/cwu/public/1-modifiers.jpg" alt="1" /></p>

<table>
  <thead>
    <tr>
      <th>Action</th>
      <th>Documentation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Text</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/text">Text</a></td>
    </tr>
    <tr>
      <td>Set font size</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/text/font(_:)">.font</a></td>
    </tr>
    <tr>
      <td>Set text color</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/foregroundcolor(_:)">.foregroundColor</a></td>
    </tr>
    <tr>
      <td>Add padding around the text</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/padding(_:)">.padding</a></td>
    </tr>
    <tr>
      <td>Set background color</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/background(_:)">.background</a></td>
    </tr>
    <tr>
      <td>Round the corners</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/cornerradius(_:)">.cornerRadius</a></td>
    </tr>
    <tr>
      <td>Add a shadow</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/shadow(_:)">.shadow</a></td>
    </tr>
  </tbody>
</table>

<p>This table neatly organizes each action alongside its corresponding documentation link.</p>

<h3 id="creating-a-custom-button">Creating a Custom Button</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Button</span><span class="p">(</span><span class="nv">action</span><span class="p">:</span> <span class="p">{</span>
            <span class="c1">// Action to be performed when the button is tapped</span>
        <span class="p">})</span> <span class="p">{</span>
            <span class="kt">Text</span><span class="p">(</span><span class="s">"Tap Me!"</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">fontWeight</span><span class="p">(</span><span class="o">.</span><span class="n">bold</span><span class="p">)</span> <span class="c1">// Set font weight</span>
                <span class="o">.</span><span class="nf">padding</span><span class="p">()</span> <span class="c1">// Add padding around the text</span>
                <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span> <span class="c1">// Set background color</span>
                <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span> <span class="c1">// Set text color</span>
                <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span> <span class="c1">// Round the corners</span>
                <span class="o">.</span><span class="nf">shadow</span><span class="p">(</span><span class="nv">color</span><span class="p">:</span> <span class="o">.</span><span class="n">gray</span><span class="p">,</span> <span class="nv">radius</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nv">x</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">// Add a shadow</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="/cwu/public/2-modifiers.jpg" alt="1" /></p>

<table>
  <thead>
    <tr>
      <th>Action</th>
      <th>Documentation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Button</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/button">Button</a></td>
    </tr>
    <tr>
      <td>Set font weight</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/fontweight(_:)">.fontWeight</a></td>
    </tr>
    <tr>
      <td>Add padding around the text</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/padding(_:)">.padding</a></td>
    </tr>
    <tr>
      <td>Set background color</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/background(_:)">.background</a></td>
    </tr>
    <tr>
      <td>Set text color</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/foregroundcolor(_:)">.foregroundColor</a></td>
    </tr>
    <tr>
      <td>Round the corners</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/cornerradius(_:)">.cornerRadius</a></td>
    </tr>
    <tr>
      <td>Add a shadow</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/shadow(_:)">.shadow</a></td>
    </tr>
  </tbody>
</table>

<p>This table neatly organizes each action alongside its corresponding documentation link.</p>

<h3 id="dynamic-layout-with-stacks-and-spacers">Dynamic Layout with Stacks and Spacers</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">VStack</span> <span class="p">{</span>
            <span class="kt">Text</span><span class="p">(</span><span class="s">"Welcome to SwiftUI!"</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">largeTitle</span><span class="p">)</span> <span class="c1">// Set font size</span>
                <span class="o">.</span><span class="nf">padding</span><span class="p">(</span><span class="o">.</span><span class="n">bottom</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span> <span class="c1">// Add bottom padding</span>
            
            <span class="kt">HStack</span> <span class="p">{</span>
                <span class="kt">Image</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"star.fill"</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">yellow</span><span class="p">)</span> <span class="c1">// Set image color</span>
                <span class="kt">Text</span><span class="p">(</span><span class="s">"SwiftUI"</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">headline</span><span class="p">)</span> <span class="c1">// Set font size</span>
                    <span class="o">.</span><span class="nf">fontWeight</span><span class="p">(</span><span class="o">.</span><span class="n">bold</span><span class="p">)</span> <span class="c1">// Set font weight</span>
                    <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span>
            <span class="p">}</span>
            <span class="o">.</span><span class="nf">padding</span><span class="p">()</span> <span class="c1">// Add padding around the stack</span>
            <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">green</span><span class="p">)</span> <span class="c1">// Set background color</span>
            <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1">// Round the corners</span>
            
            <span class="kt">Spacer</span><span class="p">()</span> <span class="c1">// Add flexible space</span>
            
            <span class="kt">Text</span><span class="p">(</span><span class="s">"Let's build amazing apps!"</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title3</span><span class="p">)</span> <span class="c1">// Set font size</span>
        <span class="p">}</span>
        <span class="o">.</span><span class="nf">padding</span><span class="p">()</span> <span class="c1">// Add padding around the VStack</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="/cwu/public/3-modifiers.jpg" alt="1" /></p>

<table>
  <thead>
    <tr>
      <th>Action</th>
      <th>Documentation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>VStack</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/vstack">VStack</a></td>
    </tr>
    <tr>
      <td>Set font size</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/text">Text</a></td>
    </tr>
    <tr>
      <td>Add bottom padding</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/text/font(_:)">.font</a></td>
    </tr>
    <tr>
      <td>Set image color</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/foregroundcolor(_:)">.foregroundColor</a></td>
    </tr>
    <tr>
      <td>Add padding around the stack</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/padding(_:)">.padding</a></td>
    </tr>
    <tr>
      <td>Set background color</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/background(_:)">.background</a></td>
    </tr>
    <tr>
      <td>Round the corners</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/view/cornerradius(_:)">.cornerRadius</a></td>
    </tr>
    <tr>
      <td>Add flexible space</td>
      <td><a href="https://developer.apple.com/documentation/swiftui/spacer">Spacer</a></td>
    </tr>
  </tbody>
</table>

<p>This table neatly organizes each action alongside its corresponding documentation link.</p>

<p>Let’s explore some additional unique examples of SwiftUI modifiers:</p>

<h3 id="rotating-a-text-view">Rotating a Text View</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Text</span><span class="p">(</span><span class="s">"Hello, SwiftUI!"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">rotationEffect</span><span class="p">(</span><span class="o">.</span><span class="nf">degrees</span><span class="p">(</span><span class="mi">45</span><span class="p">))</span> <span class="c1">// Rotate the text by 45 degrees</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Rotate the text by 45 degrees <a href="https://developer.apple.com/documentation/swiftui/view/rotationeffect(_:)">.rotationEffect</a></p>

<h3 id="creating-a-gradient-background">Creating a Gradient Background</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Text</span><span class="p">(</span><span class="s">"Welcome to SwiftUI!"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">largeTitle</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">padding</span><span class="p">()</span>
            <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">LinearGradient</span><span class="p">(</span><span class="nv">gradient</span><span class="p">:</span> <span class="kt">Gradient</span><span class="p">(</span><span class="nv">colors</span><span class="p">:</span> <span class="p">[</span><span class="o">.</span><span class="n">blue</span><span class="p">,</span> <span class="o">.</span><span class="n">green</span><span class="p">]),</span> <span class="nv">startPoint</span><span class="p">:</span> <span class="o">.</span><span class="n">topLeading</span><span class="p">,</span> <span class="nv">endPoint</span><span class="p">:</span> <span class="o">.</span><span class="n">bottomTrailing</span><span class="p">))</span> <span class="c1">// Apply gradient background</span>
            <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Apply gradient background <a href="https://developer.apple.com/documentation/swiftui/lineargradient">LinearGradient</a></p>

<p><img src="/cwu/public/4-modifiers.jpg" alt="1" /></p>

<h3 id="scaling-an-image">Scaling an Image</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Image</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"star.fill"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">yellow</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="nf">system</span><span class="p">(</span><span class="nv">size</span><span class="p">:</span> <span class="mi">100</span><span class="p">))</span>
            <span class="o">.</span><span class="nf">scaleEffect</span><span class="p">(</span><span class="mf">2.0</span><span class="p">)</span> <span class="c1">// Scale the image by a factor of 2</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Scale the image by a factor of 2 <a href="https://developer.apple.com/documentation/swiftui/view/scaleeffect(_:)">.scaleEffect</a></p>

<p><img src="/cwu/public/5-modifiers.jpg" alt="1" /></p>

<h3 id="applying-blur-effect">Applying Blur Effect</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Text</span><span class="p">(</span><span class="s">"SwiftUI"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">largeTitle</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">padding</span><span class="p">()</span>
            <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">blur</span><span class="p">(</span><span class="nv">radius</span><span class="p">:</span> <span class="mi">5</span><span class="p">)</span> <span class="c1">// Apply blur effect</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Apply blur effect <a href="https://developer.apple.com/documentation/swiftui/view/blur(_:)">.blur</a></p>

<h3 id="creating-a-custom-border">Creating a Custom Border</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Text</span><span class="p">(</span><span class="s">"Hello, SwiftUI!"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title</span><span class="p">)</span><span class="o">!</span><span class="p">[</span><span class="mi">1</span><span class="p">](</span><span class="o">/</span><span class="n">assets</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="n">jpg</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">padding</span><span class="p">()</span>
            <span class="o">.</span><span class="nf">border</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">red</span><span class="p">,</span> <span class="nv">width</span><span class="p">:</span> <span class="mi">2</span><span class="p">)</span> <span class="c1">// Apply a red border with width 2</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Apply a red border with width 2 <a href="https://developer.apple.com/documentation/swiftui/view/border(_:width:)">.border</a></p>

<h3 id="rotating-3d-cube">Rotating 3D Cube</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="kd">@State</span> <span class="kd">private</span> <span class="k">var</span> <span class="nv">rotationAngle</span><span class="p">:</span> <span class="kt">Double</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">VStack</span> <span class="p">{</span>
            <span class="kt">Button</span> <span class="p">{</span>
                <span class="n">rotationAngle</span> <span class="o">+=</span> <span class="mi">360</span>
            <span class="p">}</span> <span class="nv">label</span><span class="p">:</span> <span class="p">{</span>
                <span class="kt">Text</span><span class="p">(</span><span class="s">"Tap Me!"</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">fontWeight</span><span class="p">(</span><span class="o">.</span><span class="n">bold</span><span class="p">)</span> <span class="c1">// Set font weight</span>
                    <span class="o">.</span><span class="nf">padding</span><span class="p">()</span> <span class="c1">// Add padding around the text</span>
                    <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span> <span class="c1">// Set background color</span>
                    <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span> <span class="c1">// Set text color</span>
                    <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span> <span class="c1">// Round the corners</span>
                    <span class="o">.</span><span class="nf">shadow</span><span class="p">(</span><span class="nv">color</span><span class="p">:</span> <span class="o">.</span><span class="n">gray</span><span class="p">,</span> <span class="nv">radius</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nv">x</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">// Add a shadow</span>
            <span class="p">}</span>
            
            <span class="kt">Spacer</span><span class="p">()</span>
            <span class="kt">CubeView</span><span class="p">()</span>
                <span class="o">.</span><span class="nf">rotation3DEffect</span><span class="p">(</span>
                    <span class="o">.</span><span class="nf">degrees</span><span class="p">(</span><span class="n">rotationAngle</span><span class="p">),</span>
                    <span class="nv">axis</span><span class="p">:</span> <span class="p">(</span><span class="nv">x</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">z</span><span class="p">:</span> <span class="mi">1</span><span class="p">))</span>
                <span class="o">.</span><span class="nf">animation</span><span class="p">(</span><span class="o">.</span><span class="nf">easeInOut</span><span class="p">(</span><span class="nv">duration</span><span class="p">:</span> <span class="mf">2.0</span><span class="p">))</span>
            <span class="kt">Spacer</span><span class="p">()</span>
        <span class="p">}</span><span class="o">.</span><span class="nf">padding</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">struct</span> <span class="kt">CubeView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">RoundedRectangle</span><span class="p">(</span><span class="nv">cornerRadius</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">fill</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">frame</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="mi">200</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Apply 3D rotation effect <a href="https://developer.apple.com/documentation/swiftui/view/rotation3deffect(_:axis:anchor:anchorZ:perspective:)">.rotation3DEffect</a>
and adding animations <a href="https://developer.apple.com/documentation/swiftui/view/animation(_:)">.animation</a></p>

<p><img src="/cwu/public/6-modifiers.jpg" alt="1" /></p>

<h2 id="conclusion">Conclusion</h2>

<p>Modifiers are a fundamental aspect of SwiftUI that empower you to customize your app’s UI with precision and creativity. By chaining together various modifiers, you can achieve sophisticated designs while maintaining a clean and readable codebase.</p>

<p>To explore more about modifiers and their capabilities, refer to the <a href="https://developer.apple.com/documentation/swiftui/view">official SwiftUI documentation</a>.</p>

<p>Start experimenting with modifiers in your SwiftUI projects today and unleash your creativity to craft stunning user interfaces that stand out!</p>]]></content><author><name>Usman Saeed</name><email>itsusman.saeed@gmail.com</email></author><category term="SwiftUI" /><summary type="html"><![CDATA[Welcome to the world of SwiftUI modifiers, where you can transform and style your user interface with elegance and simplicity. Modifiers are powerful tools that allow you to customize the appearance and behavior of views in SwiftUI. In this article, we’ll explore the magic of modifiers and how you can use them creatively to enhance your app’s user experience.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://m-usmansaeed.github.io/cwu/cwu/public/1-modifiers.jpg" /><media:content medium="image" url="https://m-usmansaeed.github.io/cwu/cwu/public/1-modifiers.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Exploring Views in SwiftUI</title><link href="https://m-usmansaeed.github.io/cwu/2024/05/02/exploring-views-in-swiftui/" rel="alternate" type="text/html" title="Exploring Views in SwiftUI" /><published>2024-05-02T00:00:00+05:00</published><updated>2024-05-02T00:00:00+05:00</updated><id>https://m-usmansaeed.github.io/cwu/2024/05/02/exploring-views-in-swiftui</id><content type="html" xml:base="https://m-usmansaeed.github.io/cwu/2024/05/02/exploring-views-in-swiftui/"><![CDATA[<p>In SwiftUI, <strong>Views</strong> are the fundamental building blocks for constructing user interfaces. They represent everything from simple text labels to complex interactive elements. Understanding how to work with Views is essential for creating engaging and dynamic UI experiences.</p>

<h2 id="what-are-views">What are Views?</h2>

<p>In the context of SwiftUI, a <strong>View</strong> is a protocol that defines the structure and behavior of a UI element. Views can be anything from a basic text label (<code class="language-plaintext highlighter-rouge">Text</code>) to a more complex layout composed of multiple subviews. Views are composable, meaning you can combine them together to create more sophisticated interfaces.</p>

<h2 id="creating-views">Creating Views</h2>

<p>Creating a simple view in SwiftUI is straightforward. Let’s start with a basic example:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">SwiftUI</span>

<span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">Text</span><span class="p">(</span><span class="s">"Hello, SwiftUI!"</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
            <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="/cwu/public/1-swiftui-views.jpg" alt="1" /></p>

<p>In this example, we’ve created a <code class="language-plaintext highlighter-rouge">Text</code> view that displays the text “Hello, SwiftUI!” with a title font and blue color. SwiftUI provides a rich set of modifiers, such as <code class="language-plaintext highlighter-rouge">.font()</code> and <code class="language-plaintext highlighter-rouge">.foregroundColor()</code>, to customize the appearance of views.</p>

<h2 id="composing-views">Composing Views</h2>

<p>One of the strengths of SwiftUI is its composability. You can easily compose multiple views together to create more complex interfaces. Here’s an example of composing views using stacks:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">VStack</span> <span class="p">{</span>
            <span class="kt">Text</span><span class="p">(</span><span class="s">"Welcome to"</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
            <span class="kt">Text</span><span class="p">(</span><span class="s">"SwiftUI"</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">largeTitle</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">fontWeight</span><span class="p">(</span><span class="o">.</span><span class="n">bold</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="/cwu/public/2-swiftui-views.jpg" alt="1" /></p>

<p>In this example, we’ve used a <code class="language-plaintext highlighter-rouge">VStack</code> to stack two <code class="language-plaintext highlighter-rouge">Text</code> views vertically. This results in a UI where the second text appears below the first text, creating a visually pleasing layout.</p>

<h2 id="modifying-views">Modifying Views</h2>

<p>SwiftUI provides a wide range of modifiers that you can use to modify the appearance and behavior of views. Let’s add a button to our previous example and apply some modifiers to it:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">VStack</span> <span class="p">{</span>
            <span class="kt">Text</span><span class="p">(</span><span class="s">"Welcome to SwiftUI"</span><span class="p">)</span>
                <span class="o">.</span><span class="nf">font</span><span class="p">(</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
            <span class="kt">Button</span><span class="p">(</span><span class="nv">action</span><span class="p">:</span> <span class="p">{</span>
                <span class="c1">// Action to be performed when the button is tapped</span>
            <span class="p">})</span> <span class="p">{</span>
                <span class="kt">Text</span><span class="p">(</span><span class="s">"Get Started"</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">fontWeight</span><span class="p">(</span><span class="o">.</span><span class="n">bold</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">padding</span><span class="p">()</span>
                    <span class="o">.</span><span class="nf">background</span><span class="p">(</span><span class="kt">Color</span><span class="o">.</span><span class="n">blue</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">foregroundColor</span><span class="p">(</span><span class="o">.</span><span class="n">white</span><span class="p">)</span>
                    <span class="o">.</span><span class="nf">cornerRadius</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="/cwu/public/3-swiftui-views.jpg" alt="1" /></p>

<p>In this example, we’ve added a <code class="language-plaintext highlighter-rouge">Button</code> view with a closure that defines the action to be performed when the button is tapped. We’ve also applied various modifiers to customize the appearance of the button, such as setting the background color, text color, and corner radius.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Views are the building blocks of SwiftUI, allowing you to create dynamic and interactive user interfaces with ease. By understanding how to create, compose, and modify views, you can unleash the full power of SwiftUI to design beautiful and intuitive apps.</p>

<p>To learn more about Views and other SwiftUI concepts, check out the <a href="https://developer.apple.com/documentation/swiftui">official documentation</a> provided by Apple.</p>]]></content><author><name>Usman Saeed</name><email>itsusman.saeed@gmail.com</email></author><category term="SwiftUI" /><summary type="html"><![CDATA[In SwiftUI, Views are the fundamental building blocks for constructing user interfaces. They represent everything from simple text labels to complex interactive elements. Understanding how to work with Views is essential for creating engaging and dynamic UI experiences.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://m-usmansaeed.github.io/cwu/public/" /><media:content medium="image" url="https://m-usmansaeed.github.io/cwu/public/" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>